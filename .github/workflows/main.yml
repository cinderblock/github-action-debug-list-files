name: Main

on:
  pull_request:
  push:

jobs:
  check-format:
    name: Check - Format

    runs-on: ubuntu-latest

    steps:
      - name: Checkout latest code
        uses: actions/checkout@v1

      - name: Configure Npm
        run: |
          echo "color = always" >> .npmrc
          echo "loglevel = silent" >> .npmrc

      - name: Build
        run: npm install

      - name: Prettier
        run: npm run format-check -- --color

  check-lint:
    name: Check - ESLint

    runs-on: ubuntu-latest

    steps:
      - name: Checkout latest code
        uses: actions/checkout@v1

      - name: Configure Npm
        run: |
          echo "color = always" >> .npmrc
          echo "loglevel = silent" >> .npmrc

      - name: Build
        run: npm install

      - name: ESLint
        run: npm run lint -- --color

  check-spelling:
    name: Check - Spelling

    runs-on: ubuntu-latest

    steps:
      - name: Checkout latest code
        uses: actions/checkout@v1

      - name: Configure Npm
        run: |
          echo "color = always" >> .npmrc
          echo "loglevel = silent" >> .npmrc

      - name: Build
        run: npm install

      - name: cSpell
        run: npm run spellcheck -- --color

  self-test-and-use:
    name: Self Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout latest code
        uses: actions/checkout@v1

      - name: Configure Npm
        run: |
          echo "color = always" >> .npmrc
          echo "loglevel = silent" >> .npmrc

      - name: Install colordiff
        run: sudo apt-get install -y colordiff

      - name: Install Dependencies and Build
        run: npm install

      - name: Manual - List files post install
        run: find * \( -path node_modules -o -path .git \) -print -prune -o -type f -print | tee /tmp/step0.log

      - name: Action - List files post install
        uses: ./dist

      - name: Manual - List files, no changes
        run: find * \( -path node_modules -o -path .git \) -print -prune -o -type f -print | tee /tmp/step1.log

      - name: Manual - List files, no changes [diff]
        run: colordiff -u /tmp/step{0,1}.log

      - name: Action - List files, no changes
        uses: ./dist

        # Run Tests
      - name: Run Tests
        run: npm test -- --color

        # DEBUG
      - name: Manual - List files after tests
        run: find * \( -path node_modules -o -path .git \) -print -prune -o -type f -print | tee /tmp/step2.log

      - name: Manual - List files after tests [diff]
        run: colordiff -u /tmp/step{1,2}.log
        continue-on-error: true

      - name: Action - List files after tests
        uses: ./dist

      - name: Tell GitHub to not use Jekyll
        working-directory: public
        run: touch .nojekyll

      - name: Generate Allure Report
        run: npm run allure

        # DEBUG
      - name: Manual - List files after Allure
        run: find * \( -path node_modules -o -path .git \) -print -prune -o -type f -print | tee /tmp/step3.log

      - name: Manual - List files after Allure [diff]
        run: colordiff -u /tmp/step{2,3}.log
        continue-on-error: true

      - name: Action - List files after Allure
        uses: ./dist

  coverage-reports:
    name: Test Coverage and Generate Reports
    runs-on: ubuntu-latest
    steps:
      - name: Checkout latest code
        uses: actions/checkout@v1

      - name: Configure Npm
        run: |
          echo "color = always" >> .npmrc
          echo "loglevel = silent" >> .npmrc

      - name: Install colordiff
        run: sudo apt-get install -y colordiff

      - name: Install Dependencies and Build
        run: npm install

        # Run Tests
      - name: Run Tests and Generate Coverage Reports
        run: npm test -- --color
        continue-on-error: true

        # Some reports need manual generation
      - name: Generate Coverage Reports Extras
        run: npm run generate-coverage

      # Publish to gh-pages
      - name: Publish to gh-pages
        uses: peaceiris/actions-gh-pages@v2
        env:
          ACTIONS_DEPLOY_KEY: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          # PERSONAL_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
          # GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PUBLISH_BRANCH: gh-pages
          PUBLISH_DIR: public
        with:
          emptyCommits: false
          username: 'GitHub Action Static Build'
          #useremail: "actions@github.com"

  publish:
    if: github.event_name == 'push' && github.ref == 'refs/branch/release'
    needs:
      [
        check-format,
        check-lint,
        check-spelling,
        coverage-reports,
        self-test-and-use,
      ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout latest code
        uses: actions/checkout@v1

      - name: Checkout latest release
        uses: actions/checkout@v1
        with:
          ref: release
          path: dist

      - name: Configure Npm
        run: |
          echo "color = always" >> .npmrc
          echo "loglevel = silent" >> .npmrc

      - name: Install Dependencies and Build
        run: npm install

      - run: git diff
        working-directory: dist
      - name: add all changes
        working-directory: dist
        run: git add .

      - name: Create new commit with Production Dependencies
        working-directory: dist
        run: 'git commit -m "Production: Include Dependencies"'

      - name: Tag latest release specific version
        working-directory: dist
        run: |
          git tag v$(jq .version ../package.json)
          git push origin --tags

      - name: Tag latest release
        working-directory: dist
        run: |
          git tag -fa v1 -m "Update v1 tag"
          git push origin v1 --force
        # https://github.com/actions/toolkit/blob/master/docs/action-versioning.md

