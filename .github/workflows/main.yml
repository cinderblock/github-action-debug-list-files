name: Main

on:
  pull_request:
  push:

jobs:
  check-format:
    name: Check - Format

    runs-on: ubuntu-latest

    steps:
      - name: Checkout latest code
        uses: actions/checkout@v1

      - name: Make npm colorful
        run: echo "color = always" >> .npmrc

      - name: Build
        run: npm install

      - name: Prettier
        run: npm run format-check -- --color

  check-lint:
    name: Check - ESLint

    runs-on: ubuntu-latest

    steps:
      - name: Checkout latest code
        uses: actions/checkout@v1

      - name: Make npm colorful
        run: echo "color = always" >> .npmrc

      - name: Build
        run: npm install

      - name: ESLint
        run: npm run lint -- --color

  check-spelling:
    name: Check - Spelling

    runs-on: ubuntu-latest

    steps:
      - name: Checkout latest code
        uses: actions/checkout@v1

      - name: Make npm colorful
        run: echo "color = always" >> .npmrc

      - name: Build
        run: npm install

      - name: cSpell
        run: npm run spellcheck -- --color

  self-test-and-use: # make sure the action works on a clean machine without building
    name: Test Coverage and Generate Reports
    runs-on: ubuntu-latest
    steps:
      - name: Checkout latest code
        uses: actions/checkout@v1

      - name: Make npm colorful
        run: echo "color = always" >> .npmrc

      - name: Install colordiff
        run: sudo apt-get install -y colordiff

      - name: Install Dependencies and Build
        run: npm install

      - name: Manual - List files post install
        run: find * \( -path node_modules -o -path .git \) -print -prune -o -type f -print | tee /tmp/step0.log

      - name: Action - List files post install
        uses: ./

      - name: Manual - List files, no changes
        run: find * \( -path node_modules -o -path .git \) -print -prune -o -type f -print | tee /tmp/step1.log

      - name: Manual - List files, no changes [diff]
        run: colordiff -u /tmp/step{0,1}.log

      - name: Action - List files, no changes
        uses: ./

        # Run Tests
      - name: Run Tests
        run: 'npm test -- --color | :'

        # DEBUG
      - name: Manual - List files after tests
        run: find * \( -path node_modules -o -path .git \) -print -prune -o -type f -print | tee /tmp/step2.log

      - name: Manual - List files after tests [diff]
        run: colordiff -u /tmp/step{1,2}.log

      - name: Action - List files after tests
        uses: ./

      - name: Tell GitHub to not use Jekyll
        working-directory: public
        run: touch .nojekyll

      - name: Generate Allure Report
        run: npm run allure

        # DEBUG
      - name: Manual - List files after Allure
        run: find * \( -path node_modules -o -path .git \) -print -prune -o -type f -print | tee /tmp/step3.log

      - name: Manual - List files after Allure [diff]
        run: colordiff -u /tmp/step{2,3}.log

      - name: Action - List files after Allure
        uses: ./

      # Publish to gh-pages
      - name: Publish to gh-pages
        uses: peaceiris/actions-gh-pages@v2
        env:
          ACTIONS_DEPLOY_KEY: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          # PERSONAL_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
          # GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PUBLISH_BRANCH: gh-pages
          PUBLISH_DIR: public
        with:
          emptyCommits: false
          username: 'GitHub Action Static Build'
          #useremail: "actions@github.com"

  publish:
    if: github.event_name == 'push' && github.ref == 'refs/tags/*'
    needs: [self-test-and-use, check-format, check-lint, check-spelling]
    runs-on: ubuntu-latest
    steps:
      - name: Disable WIP Publish Script
        run: 'false' # WIP

      - name: Checkout latest code
        uses: actions/checkout@v1

      - name: Make npm colorful
        run: echo "color = always" >> .npmrc

      - name: Install Dependencies and Build
        run: npm install

      - name: Remove Development (and Build) Dependencies
        run: npm prune --production

      - name: Don't ignore node_modules for GitHub publish
        run: rm .gitignore

      - name: Commit built node_modules so that action is standalone
        run: git add node_modules

      - name: Create new commit with Production Dependencies
        run: 'git commit -m "Production: Include Dependencies"'

      - name: Push latest release to GitHub
        run: git push origin releases/v1 #TODO: use tag
      # https://github.com/actions/toolkit/blob/master/docs/action-versioning.md
