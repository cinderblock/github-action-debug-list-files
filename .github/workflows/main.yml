name: Main

on:
  pull_request:
  push:

jobs:
  check-format:
    name: Check - Format

    runs-on: ubuntu-latest

    steps:
      - name: Checkout latest code
        uses: actions/checkout@v1

      - name: Configure Npm
        run: |
          echo "color = always" >> .npmrc
          echo "loglevel = silent" >> .npmrc

      - name: Build
        run: npm install

      - name: Prettier
        run: npm run format-check -- --color

  check-lint:
    name: Check - Lint

    runs-on: ubuntu-latest

    steps:
      - name: Checkout latest code
        uses: actions/checkout@v1

      - name: Configure Npm
        run: |
          echo "color = always" >> .npmrc
          echo "loglevel = silent" >> .npmrc

      - name: Build
        run: npm install

      - name: ESLint
        run: npm run lint -- --color

  check-spelling:
    name: Check - Spelling

    runs-on: ubuntu-latest

    steps:
      - name: Checkout latest code
        uses: actions/checkout@v1

      - name: Configure Npm
        run: |
          echo "color = always" >> .npmrc
          echo "loglevel = silent" >> .npmrc

      - name: Build
        run: npm install

      - name: cSpell
        run: npm run spellcheck -- --color

  self-test-and-use:
    name: Test - Self Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout latest code
        uses: actions/checkout@v1

      - name: Configure Npm
        run: |
          echo "color = always" >> .npmrc
          echo "loglevel = silent" >> .npmrc

      - name: Install colordiff
        run: sudo apt-get install -y colordiff

      - name: Install Dependencies and Build
        run: npm install

      - name: Manual - List files post install
        run: find * \( -path node_modules -o -path .git \) -print -prune -o -type f -print | tee /tmp/step0.log

      - name: Action - List files post install
        uses: ./dist

      - name: Manual - List files, no changes
        run: find * \( -path node_modules -o -path .git \) -print -prune -o -type f -print | tee /tmp/step1.log

      - name: Manual - List files, no changes [diff]
        run: colordiff -u /tmp/step{0,1}.log

      - name: Action - List files, no changes
        uses: ./dist

        # Run Tests
      - name: Run Tests
        run: npm test -- --color

        # DEBUG
      - name: Manual - List files after tests
        run: find * \( -path node_modules -o -path .git \) -print -prune -o -type f -print | tee /tmp/step2.log

      - name: Manual - List files after tests [diff]
        run: colordiff -u /tmp/step{1,2}.log
        continue-on-error: true

      - name: Action - List files after tests
        uses: ./dist

      - name: Generate Allure Report
        run: npm run finalize-coverage-reports

        # DEBUG
      - name: Manual - List files after Allure
        run: find * \( -path node_modules -o -path .git \) -print -prune -o -type f -print | tee /tmp/step3.log

      - name: Manual - List files after Allure [diff]
        run: colordiff -u /tmp/step{2,3}.log
        continue-on-error: true

      - name: Action - List files after Allure
        uses: ./dist

  coverage-reports:
    name: Generate - Coverage Reports
    runs-on: ubuntu-latest
    steps:
      - name: Checkout latest code
        uses: actions/checkout@v1

      - name: Configure Npm
        run: |
          echo "color = always" >> .npmrc
          echo "loglevel = silent" >> .npmrc

      - name: Install colordiff
        run: sudo apt-get install -y colordiff

      - name: Install Dependencies and Build
        run: npm install

        # Run Tests
      - name: Run Tests and Generate Coverage Reports
        run: npm test -- --color
        continue-on-error: true

        # Some reports need manual generation
      - name: Generate Coverage Reports Extras
        run: npm run finalize-coverage-reports

      # Publish to gh-pages
      - name: Publish to gh-pages
        uses: peaceiris/actions-gh-pages@v2
        env:
          ACTIONS_DEPLOY_KEY: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          # PERSONAL_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
          # GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PUBLISH_BRANCH: gh-pages
          PUBLISH_DIR: public
        with:
          emptyCommits: false
          username: 'GitHub Action Static Build'
          #useremail: "actions@github.com"

  publish-v1:
    name: Publish - GitHub Action v1
    if: github.event_name == 'push' && github.ref == 'refs/heads/release'
    needs: [check-format, check-lint, check-spelling, self-test-and-use]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout latest code
        uses: actions/checkout@v1

      - name: Configure Npm
        run: |
          echo "color = always" >> .npmrc
          echo "loglevel = silent" >> .npmrc

      - name: Install Dependencies and Build
        run: npm install

      - name: Publish to GitHub as v1
        uses: peaceiris/actions-gh-pages@v2
        env:
          PUBLISH_BRANCH: v1
          PUBLISH_DIR: dist
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          emptyCommits: false
          username: 'GitHub Action Static Build'
          #useremail: "actions@github.com"

  test-published:
    name: Test - Published
    needs: [publish-v1]
    runs-on: ubuntu-latest
    steps:
      - name: Use latest published version # to make sure it can be used as expected
        uses: cinderblock/github-action-debug-list-files@v1
        with:
          working-directory: .
          name: 'test2'
